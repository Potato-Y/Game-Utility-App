<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>